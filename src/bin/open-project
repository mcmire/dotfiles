#!/usr/bin/env bash

# Inspired by: <https://github.com/caarlos0/dotfiles.fish/blob/d0ee6e9fc5991c80b412a313e913b83c3289d257/bin/tmux-sessionizer>
# Also see: <https://carlosbecker.com/posts/tmux-sessionizer/>

print-with-color() {
  echo -ne "\033[${1}m"
  echo -n "${@:2}"
  echo -ne "\033[0m"
}

info() {
  print-with-color 34 "$@" $'\n'
}

error() {
  print-with-color 31 "ERROR:" "$@" $'\n'
}

get-scored-project-directories-matching() {
  local project_directory="$1"
  zoxide query -l -s "$project_directory" 2>/dev/null
}

get-all-scored-project-directories() {
  local project_directory

  find ~/code -mindepth 2 -maxdepth 2 -type d |
    while read -r project_directory; do
      get-scored-project-directories-matching "$project_directory"
    done
}

get-all-or-matching-scored-project-directories() {
  local project_directory="$1"
  local matching_scored_project_directories

  if [[ -n "$project_directory" ]]; then
    matching_scored_project_directories="$(get-scored-project-directories-matching "$project_directory")"
  fi

  if [[ -n "$matching_scored_project_directories" ]]; then
    echo "$matching_scored_project_directories"
  else
    get-all-scored-project-directories
  fi
}

search-for-project() {
  local project_directory="$1"

  if [[ -d "$project_directory" ]]; then
    echo "$project_directory"
  else
    get-all-or-matching-scored-project-directories "$project_directory" | \
      sort --key 1 --numeric-sort --reverse | \
      fzf --query "$project_directory" --no-sort --select-1 --exit-0 | \
      awk '{print $2}'
  fi
}

switch-to-guaranteed-tmux-session() {
  local tmux_session_name="$1"
  local project_directory="$2"

  # "Adding" is a misnomer here; we're just bumping the rank so the next time we
  # switch, this directory will be at the bottom of the fzf list (and will thus
  # be the one selected)
  zoxide add "$project_directory"

  if ! tmux has-session -t "$tmux_session_name" &>/dev/null; then
    # -d prevents attaching to the current terminal (we will do that next)
    tmux new-session -d -s "$tmux_session_name" -c "$project_directory"
  fi
  tmux switch-client -t "$tmux_session_name"
}

main() {
  local given_project_directory="$1"

  if [[ -z "$TMUX" ]]; then
    error "It appears you are not in an active tmux session."
    error "Please start 'tmux' now, and then re-run this script."
    exit 1
  fi

  local resolved_project_directory="$(search-for-project "$given_project_directory")"
  echo "Resolved project directory: $resolved_project_directory"

  if [[ -z "$resolved_project_directory" ]]; then
    # User must have canceled the fzf, or there were no matches. Silently abort.
    exit 0
  fi

  local tmux_session_name="$(basename "$resolved_project_directory" | tr . _)"
  echo "Generated tmux session name: $tmux_session_name"

  switch-to-guaranteed-tmux-session "$tmux_session_name" "$resolved_project_directory"
}

main "$@"
